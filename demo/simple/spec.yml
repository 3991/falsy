swagger: '2.0'
info:
  title: FALSY SIMPLE DEMO API
  version: "0.1"
  contact:
    name: 'jesse'
basePath: "/v1"
tags:
  - name: GET
    description: GET
  - name: POST
    description: POST
paths:
  '/hello':
    get:
      tags: [GET]
      operationId: demo.simple.ops.hello.get_it
      summary: 测试get请求
      parameters:
        - name: name
          in: query
          type: string
          default: 'john'
      responses:
        200:
          description: Return response
      consumes:
        - application/json
      produces:
        - text/html
        - application/json
    post:
      tags: [POST]
      operationId: demo.simple.ops.hello.post_it
      summary: 测试post请求
      parameters:
        - name: name
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
                default: 'john'
      responses:
        200:
          description: Return response
      consumes:
        - application/json
      produces:
        - text/html
        - application/json
    delete:
      tags: [DELETE]
      operationId: demo.simple.ops.hello.delete_it
      summary: 测试delete请求
      parameters:
        - name: name
          in: query
          type: string
          default: 'john'
      responses:
        200:
          description: Return response
      consumes:
        - application/json
      produces:
        - text/html
        - application/json
    put:
      tags: [PUT]
      operationId: demo.simple.ops.hello.put_it
      summary: 测试put请求
      parameters:
        - name: name
          in: query
          type: string
          default: 'john'
      responses:
        200:
          description: Return response
      consumes:
        - application/json
      produces:
        - text/html
        - application/json
    patch:
      tags: [PATCH]
      operationId: demo.simple.ops.hello.patch_it
      summary: 测试patch请求
      parameters:
        - name: name
          in: query
          type: string
          default: 'john'
      responses:
        200:
          description: Return response
      consumes:
        - application/json
      produces:
        - text/html
        - application/json
